# 자신의 컴퓨터의 외부 및ㅊ 내부 IP를 확인할 수 있는 코드를 만들어보자. 가상환경 등으로 내부 IP가 변경되더라도 정확한 IP를 찾을 수 있는 방법에 대해 알아보자
# 사전지식: IP는 주소를 나타낸다. IPv4 또는 IPv6등으로 표현되면 숫자로 표현된 접속주소라고 생각하면 된다. 여기서 내부 ip와 외부 ip의 차이점은 집주소를 아파트로 본다면
#           외부ip는 xx시 xx동 xx아파트 이다. 내부ip는 동, 호수라고 볼 수 있다. 일반적으로 인터넷 망이 설치된 가정집에는 공유기가 있어 여러 대의 컴퓨터, 스마트폰, tv등의 기기를 연결하여 사용한다.
#           내부 ip는 집에 있는 공유기가 주소를 할당하여 줍니다. 하지만 외부 ip는 kt,lg등 인터넷 망 공급자가 주소를 할당하여 줍니다. 우리는 내부 및 외부ip를 확인하여 정확하게 자신의 컴퓨터가 연결된 주소를 알 수 있다.
# --------------------------------------------------------------------------------------------------------------

# 컴퓨터의 외부, 내부 ip 확인

# import socket # 컴퓨터가 연결된 접속정보를 받아올 때 사용하는 모듈 불러옴 

# in_addr = socket.gethostbyname(socket.gethostname()) # 연결된 소켓 이름을 가져와 변수에 담는다

# print(in_addr)
# --------------------------------------------------------------------------------------------------------------

# 소켓으로 외부 사이트에 접속하고 접속된 정보를 바탕으로 ip를 조금 더 정확하게 확인하는 방법

# import socket

# in_addr = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 소켓에 연결
# in_addr.connect(('www.google.co.kr',443)) # 구글에 접속한다, http의 기본 포트는 443이다
# print(in_addr.getsockname()[0]) # 연결된 소켓 이름 출력
# --------------------------------------------------------------------------------------------------------------

# 외부 ip를 알아보는 코드: 특정 사이트에 접속해서 내가 연결된 ip를 확인한다.

import requests
import re

req = requests.get('http://ipconfig.kr')
out_addr = re.search(r'IP Address : (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})', req.text)[1]
print(out_addr)
